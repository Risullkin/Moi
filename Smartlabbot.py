from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    CallbackContext,
    filters
)

TOKEN = "8058467033:AAE3BRIYlDj7rv0kbapyYwtgu8z4GpTfWvQ"

SUBJECTS = {
    "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞": "üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞: –ê–ª–≥–µ–±—Ä–∞, –ì–µ–æ–º–µ—Ç—Ä–∏—è, –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ï–ì–≠.",
    "–†—É—Å—Å–∫–∏–π": "üìñ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫: –ì—Ä–∞–º–º–∞—Ç–∏–∫–∞, –°–æ—á–∏–Ω–µ–Ω–∏—è, –û–ì–≠/–ï–ì–≠.",
    "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π": "üåç –ê–Ω–≥–ª–∏–π—Å–∫–∏–π: –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π, IELTS, TOEFL.",
    "–ö–∏—Ç–∞–π—Å–∫–∏–π": "üêâ –ö–∏—Ç–∞–π—Å–∫–∏–π: –ò–µ—Ä–æ–≥–ª–∏—Ñ—ã, HSK, –ë–∏–∑–Ω–µ—Å-–∫—É—Ä—Å.",
    "–•–∏–º–∏—è": "‚öóÔ∏è –•–∏–º–∏—è: –û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è, –ù–µ–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è, –û–ª–∏–º–ø–∏–∞–¥—ã."
}

CONTACTS = """
üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã —à–∫–æ–ª—ã:
–¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX
Email: school@example.com
–ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –û–±—Ä–∞–∑—Ü–æ–≤–∞, 1
"""

REVIEWS = """
üì¢ –û—Ç–∑—ã–≤—ã –æ —à–∫–æ–ª–µ:
1. ‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ (–ê–Ω–Ω–∞): "–û—Ç–ª–∏—á–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏!"
2. ‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ (–ò–≤–∞–Ω): "–•–æ—Ä–æ—à–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞."
3. ‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ (–ú–∞—Ä–∏—è): "–†–µ–±–µ–Ω–æ–∫ –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ!"
"""

async def start(update: Update, context: CallbackContext):
    buttons = [["üìö –ü—Ä–µ–¥–º–µ—Ç—ã", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"], ["üì¢ –û—Ç–∑—ã–≤—ã"]]
    markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª—É! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=markup)

async def subjects(update: Update, context: CallbackContext):
    subjects_list = "\n".join([f"‚Ä¢ {sub}" for sub in SUBJECTS.keys()])
    await update.message.reply_text(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã:\n{subjects_list}\n\n–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏.")

async def contacts(update: Update, context: CallbackContext):
    await update.message.reply_text(CONTACTS)

async def reviews(update: Update, context: CallbackContext):
    await update.message.reply_text(REVIEWS)

async def handle_subject(update: Update, context: CallbackContext):
    subject = update.message.text
    if subject in SUBJECTS:
        await update.message.reply_text(SUBJECTS[subject])
    else:
        await update.message.reply_text("–¢–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ.")

def main():
    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.Regex("^üìö –ü—Ä–µ–¥–º–µ—Ç—ã$"), subjects))
    application.add_handler(MessageHandler(filters.Regex("^üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã$"), contacts))
    application.add_handler(MessageHandler(filters.Regex("^üì¢ –û—Ç–∑—ã–≤—ã$"), reviews))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_subject))

    application.run_polling()

if __name__ == "__main__":
    main()
