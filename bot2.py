from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackContext, filters

TOKEN = "8058467033:AAE3BRIYlDj7rv0kbapyYwtgu8z4GpTfWvQ"

SUBJECTS = {
    "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞": "üìö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞: –ê–ª–≥–µ–±—Ä–∞, –ì–µ–æ–º–µ—Ç—Ä–∏—è, –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ï–ì–≠.",
    "–†—É—Å—Å–∫–∏–π": "üìñ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫: –ì—Ä–∞–º–º–∞—Ç–∏–∫–∞, –°–æ—á–∏–Ω–µ–Ω–∏—è, –û–ì–≠/–ï–ì–≠.",
    "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π": "üåç –ê–Ω–≥–ª–∏–π—Å–∫–∏–π: –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π, IELTS, TOEFL.",
    "–ö–∏—Ç–∞–π—Å–∫–∏–π": "üêâ –ö–∏—Ç–∞–π—Å–∫–∏–π: –ò–µ—Ä–æ–≥–ª–∏—Ñ—ã, HSK, –ë–∏–∑–Ω–µ—Å-–∫—É—Ä—Å.",
    "–•–∏–º–∏—è": "‚öóÔ∏è –•–∏–º–∏—è: –û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è, –ù–µ–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è, –û–ª–∏–º–ø–∏–∞–¥—ã."
}

CONTACTS = """
üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã —à–∫–æ–ª—ã:
–¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX
Email: school@example.com
–ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –û–±—Ä–∞–∑—Ü–æ–≤–∞, 1
"""

REVIEWS_LIST = [
    "‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ (–ê–Ω–Ω–∞): –û—Ç–ª–∏—á–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏!",
    "‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ (–ò–≤–∞–Ω): –•–æ—Ä–æ—à–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞.",
    "‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ (–ú–∞—Ä–∏—è): –†–µ–±—ë–Ω–æ–∫ –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ!",
    "‚òÖ‚òÖ‚òÖ‚òÜ‚òÜ (–ü—ë—Ç—Ä): –ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏–∫–∏."
]

current_review_index = 0


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def start(update: Update, context: CallbackContext):
    buttons = [["üìö –ü—Ä–µ–¥–º–µ—Ç—ã", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"], ["üì¢ –û—Ç–∑—ã–≤—ã"]]
    markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª—É! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:",
        reply_markup=markup
    )


# –ü–æ–∫–∞–∑ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (–∫–Ω–æ–ø–∫–∏)
async def show_subjects(update: Update, context: CallbackContext):
    buttons = [
                  [subject] for subject in SUBJECTS.keys()
              ] + [["–ú–µ–Ω—é"]]
    markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:",
        reply_markup=markup
    )


# –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
async def handle_subject(update: Update, context: CallbackContext):
    subject = update.message.text
    if subject in SUBJECTS:
        buttons = [["–ú–µ–Ω—é"]]
        markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        await update.message.reply_text(
            SUBJECTS[subject],
            reply_markup=markup
        )
    elif subject == "–ú–µ–Ω—é":
        await start(update, context)
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞.")

async def contacts(update: Update, context: CallbackContext):
    await update.message.reply_text(CONTACTS)

async def handle_subject(update: Update, context: CallbackContext):
    subject = update.message.text
    if subject in SUBJECTS:
        await update.message.reply_text(SUBJECTS[subject])
    else:
        await update.message.reply_text("–¢–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ.")


async def show_reviews(update: Update, context: CallbackContext):
    global current_review_index
    review = REVIEWS_LIST[current_review_index]
    buttons = [["–ï—â—ë", "–ú–µ–Ω—é"]]
    markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text(
        f"–û—Ç–∑—ã–≤ {current_review_index + 1}/{len(REVIEWS_LIST)}:\n{review}",
        reply_markup=markup
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ "–ï—â—ë" –∏ "–ú–µ–Ω—é"
async def handle_review_buttons(update: Update, context: CallbackContext):
    global current_review_index
    user_choice = update.message.text

    if user_choice == "–ï—â—ë":
        current_review_index = (current_review_index + 1) % len(REVIEWS_LIST)
        await show_reviews(update, context)
    elif user_choice == "–ú–µ–Ω—é":
        await start(update, context)

def main():
    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.Regex("^üìö –ü—Ä–µ–¥–º–µ—Ç—ã$"), show_subjects))
    application.add_handler(MessageHandler(filters.Regex("^üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã$"), contacts))
    application.add_handler(MessageHandler(filters.Regex("^üì¢ –û—Ç–∑—ã–≤—ã$"), show_reviews))
    application.add_handler(MessageHandler(filters.Regex("^(–ï—â—ë|–ú–µ–Ω—é)$"), handle_review_buttons))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_subject))

    application.run_polling()


if __name__ == "__main__":
    main()
